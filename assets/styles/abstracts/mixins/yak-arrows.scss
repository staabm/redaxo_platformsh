@charset "utf-8";

@mixin yak-arrow-center-bottom($width: 10px, $color: "", $border-width: 0, $border-color: "") {
    position: relative;

    @if ($border-width > 0) {
        &:after,
        &:before {
            pointer-events: none;
            content: "";
            position: absolute;
            top: 100%;
            left: 50%;
            height: 0;
            width: 0;
            border-color: transparent;
            border-style: solid;
        }
        &:after {
            margin-left: -($width);
            border-width: $width;
            @if ($color != "") {
                border-top-color: #{$color};
            }
        }
        &:before {
            margin-left: -($width + $border-width);
            border-width: ($width + $border-width);
            @if ($border-color != "") {
                border-top-color: #{$border-color};
            }
        }
    } @else {
        &:after {
            pointer-events: none;
            content: "";
            position: absolute;
            top: 100%;
            left: 50%;
            height: 0;
            width: 0;
            margin-left: -($width);
            border-width: $width;
            border-color: transparent;
            border-style: solid;
            @if ($color != "") {
                border-top-color: #{$color};
            }
        }
    }
}


@mixin yak-arrow-left-bottom($width: 10px, $color: "", $border-width: 0, $border-color: "") {
    position: relative;

    @if ($border-width > 0) {
        &:after,
        &:before {
            pointer-events: none;
            content: "";
            position: absolute;
            top: 100%;
            left: (flex-grid(1, 12) + flex-gutter(12)); // 1 of 12 column
            height: 0;
            width: 0;
            border-color: transparent;
            border-style: solid;
        }
        &:after {
            margin-left: -($width);
            border-width: $width;
            @if ($color != "") {
                border-top-color: #{$color};
            }
        }
        &:before {
            margin-left: -($width + $border-width);
            border-width: ($width + $border-width);
            @if ($border-color != "") {
                border-top-color: #{$border-color};
            }
        }
    } @else {
        &:after {
            pointer-events: none;
            content: "";
            position: absolute;
            top: 100%;
            left: (flex-grid(1, 12) + flex-gutter(12)); // 1 of 12 column
            height: 0;
            width: 0;
            margin-left: -($width);
            border-width: $width;
            border-color: transparent;
            border-style: solid;
            @if ($color != "") {
                border-top-color: #{$color};
            }
        }
    }
}


@mixin yak-arrow-width($widths, $border: false, $breakpoints: $mq-breakpoints) {
    $newBreakpoints: ();
    $listOfBreakpoints: map-keys($breakpoints);
    @each $breakpoint in $listOfBreakpoints {
        $nextIndex: 1 + index($listOfBreakpoints, $breakpoint);
        $nextBreakpoint: "";
        @if ($nextIndex <= length($listOfBreakpoints)) {
            $nextBreakpoint: nth($listOfBreakpoints, $nextIndex);
        }
        $newBreakpoints: map-merge($newBreakpoints, ($breakpoint: $nextBreakpoint));
    }

    @each $breakpoint, $width in $widths {
        @if (map-has-key($newBreakpoints, $breakpoint)) {
            $from: $breakpoint;
            $until: map-get($newBreakpoints, $breakpoint);
            @if ($until != "") {
                @include mq($from, $until) {
                    &:after {
                        margin-left: -($width);
                        border-width: $width;
                    }
                    @if ($border) {
                        &:before {
                            margin-left: -($width + 1);
                            border-width: ($width + 1);
                        }
                    }
                }

            } @else {
                @include mq($from) {
                    &:after {
                        margin-left: -($width);
                        border-width: $width;
                    }
                    @if ($border) {
                        &:before {
                            margin-left: -($width + 1);
                            border-width: ($width + 1);
                        }
                    }
                }
            }
        }
    }
}
