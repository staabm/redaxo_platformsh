@charset "utf-8";

/*
//== Themes
$themes: (
        class-1: (
                color: black,
                background-color: red
        ),
        class-2: (
                color: green,
                background-color: yellow
        )
);
*/



@function get-themify-selector($theme, $theme-prefix, $position) {
    $class: $theme;
    @if $theme-prefix != "" {
        $class: ".#{$theme-prefix}-#{$class}";
    } @else {
        $class: ".#{$class}";
    }

    @if $position == "^" {
        $class: #{$class + &};
    } @else if $position != "" {
        $class: #{$class + " " + $position + " " + &};
    } @elseif & {
        $class: #{& + $class};
    }

    @return $class;
}

@mixin themify($property, $position: "", $theme-prefix: $theme-prefix, $themes: $themes) {
    @each $theme, $map in $themes {
        $class: get-themify-selector($theme, $theme-prefix, $position);

        @at-root #{$class} {
            #{$property}: map-get($map, main-color);
        }
    }
}

@mixin themify-border($position: "", $theme-prefix: $theme-prefix, $themes: $themes, $direction: "") {
    @each $theme, $map in $themes {
        $class: get-themify-selector($theme, $theme-prefix, $position);
        $property: 'border-color';
        @if $direction != "" {
            $property: 'border-#{$direction}-color';
        }
        @at-root #{$class} {
            #{$property}: map-get($map, main-color);
        }
    }
}
@mixin themify-top-border($position: "", $theme-prefix: $theme-prefix, $themes: $themes) {
    @include themify-border($position, $theme-prefix, $themes, "top");
}

@mixin themify-bottom-border($position: "", $theme-prefix: $theme-prefix, $themes: $themes) {
    @include themify-border($position, $theme-prefix, $themes, "bottom");
}

@mixin themify-color($position: "", $theme-prefix: $theme-prefix, $themes: $themes) {
    @each $theme, $map in $themes {
        $class: get-themify-selector($theme, $theme-prefix, $position);

        @at-root #{$class} {
            color: map-get($map, text-color);
        }
    }
}

@mixin themify-inverse-color($position: "", $theme-prefix: $theme-prefix, $themes: $themes) {
    @each $theme, $map in $themes {
        $class: get-themify-selector($theme, $theme-prefix, $position);

        @at-root #{$class} {
            color: map-get($map, inverse-text-color);
        }
    }
}

@mixin themify-inverse($position: "", $theme-prefix: $theme-prefix, $themes: $themes) {
    @each $theme, $map in $themes {
        $class: get-themify-selector($theme, $theme-prefix, $position);

        @at-root #{$class} {
            background-color: map-get($map, inverse-background-color) !important;
            color: map-get($map, inverse-text-color) !important;

            a {
                color: map-get($map, inverse-link-color);
                &:hover {
                    color: map-get($map, inverse-link-color-hover);
                }
            }
        }
    }
}
