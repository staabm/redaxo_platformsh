
@function yak-color($key: 'primary', $variant: $yak-color-key, $opacity: 1) {
    $color: null;

    // Get the color spectrum
    $color-spectrum: map-get($yak-colors, $key);

    // Get the color variant
    @if $color-spectrum {
        $color: map-get($color-spectrum, $variant);
    }

    // Get the alpha setting
    $alpha: if(type-of($opacity) == 'number', $opacity, map-get($yak-opacities, $opacity));

    // Set the alpha of the color
    @if $alpha {
        $color: rgba($color, $alpha);
    }

    @return $color;
}

//@function color($key: 'primary') {
//    @return map-get($colors, $key);
//}

@function yak-color-contrast($color, $variant: $yak-color-key, $opacity: 1) {

    @if map-has-key($yak-colors, $color) {
        $color: yak-color($color, $variant, $opacity);
    }

    $r: red($color);
    $g: green($color);
    $b: blue($color);

    $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;

    @if ($yiq >= 150) {
        @return $yak-color-contrast-dark;
    } @else {
        @return $yak-color-contrast-light;
    }
}

@function yak-color-level($color-name: 'primary', $level: 0) {
    $color: yak-color($color-name);
    $color-base: if($level > 0, #000, #fff);
    $level: abs($level);

    @return mix($color-base, $color, $level * $yak-color-interval);
}
